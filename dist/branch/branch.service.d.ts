import { PrismaService } from '../prisma/prisma.service';
import { CreateBranchDto } from './dto/create-branch.dto';
import { UpdateBranchDto } from './dto/update-branch.dto';
export declare class BranchService {
    private prisma;
    constructor(prisma: PrismaService);
    create(data: CreateBranchDto): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        name: string;
        phoneNumber: string;
        rfc: string;
        address: string;
        manager: string;
        salePrice: number;
        razonSocial: string;
        regimenFiscal: string;
        codigoPostal: string;
        usoCfdi: string;
        clientId: number;
    }>;
    findAll(): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        name: string;
        phoneNumber: string;
        rfc: string;
        address: string;
        manager: string;
        salePrice: number;
        razonSocial: string;
        regimenFiscal: string;
        codigoPostal: string;
        usoCfdi: string;
        clientId: number;
    }[]>;
    findOne(id: number): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        name: string;
        phoneNumber: string;
        rfc: string;
        address: string;
        manager: string;
        salePrice: number;
        razonSocial: string;
        regimenFiscal: string;
        codigoPostal: string;
        usoCfdi: string;
        clientId: number;
    } | null>;
    update(id: number, data: UpdateBranchDto): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        name: string;
        phoneNumber: string;
        rfc: string;
        address: string;
        manager: string;
        salePrice: number;
        razonSocial: string;
        regimenFiscal: string;
        codigoPostal: string;
        usoCfdi: string;
        clientId: number;
    }>;
    softDelete(id: number): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        name: string;
        phoneNumber: string;
        rfc: string;
        address: string;
        manager: string;
        salePrice: number;
        razonSocial: string;
        regimenFiscal: string;
        codigoPostal: string;
        usoCfdi: string;
        clientId: number;
    }>;
}
